  n8n-postgres:
    image: postgres:16
    container_name: n8n-postgres
    restart: always
    env_file:
      - ./env/n8n.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - ./volumes/n8n/db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    env_file:
      - ./env/n8n.env
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      # - N8N_HOST=example.com
      # - NODE_ENV=production
      # - N8N_PATH
      # - WEBHOOK_URL=https://example.com
    ports:
      - 5678:5678
    links:
      - n8n-postgres
    user: 0:0 # If you have problems, set ./volumes/n8n/n8n readable for all
    volumes:
      - ./volumes/n8n/n8n:/home/node/.n8n
    depends_on:
      n8n-postgres:
        condition: service_healthy